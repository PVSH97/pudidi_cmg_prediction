name: Hourly CMG Data Update

on:
  schedule:
    # Run every hour at minute 5
    - cron: '5 * * * *'
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [main]
    paths:
      - '.github/workflows/hourly_update.yml'
      - 'scripts/update_cache.py'

jobs:
  update-cache:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          pip install requests pytz numpy
      
      - name: Run cache update
        timeout-minutes: 50
        run: |
          cd ${{ github.workspace }}
          echo "Starting cache update at $(date)"
          echo "Python version: $(python --version)"
          echo "Working directory: $(pwd)"
          python simple_sequential_update_final.py
          echo "Cache update completed at $(date)"
        env:
          PYTHONPATH: ${{ github.workspace }}/api
      
      - name: Check for changes
        id: check_changes
        run: |
          git diff --quiet data/cache/ || echo "changed=true" >> $GITHUB_OUTPUT
      
      - name: Commit and push cache updates
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Pull latest changes first to avoid conflicts
          echo "üì• Pulling latest changes from main..."
          git pull origin main --rebase || {
            echo "‚ö†Ô∏è Rebase failed, trying merge strategy..."
            git rebase --abort 2>/dev/null || true
            git pull origin main --no-rebase || true
          }
          
          # Add and commit cache changes
          git add data/cache/
          git commit -m "üîÑ Hourly cache update - $(date +'%Y-%m-%d %H:%M')"
          
          # Push with retry logic
          PUSH_SUCCESS=false
          for i in 1 2 3; do
            echo "üì§ Push attempt $i of 3..."
            if git push origin main; then
              echo "‚úÖ Cache updated and pushed successfully!"
              PUSH_SUCCESS=true
              break
            else
              echo "‚ùå Push failed, pulling latest and retrying..."
              git pull origin main --rebase --autostash || true
            fi
          done
          
          if [ "$PUSH_SUCCESS" = false ]; then
            echo "‚ö†Ô∏è Could not push after 3 attempts. Cache is updated locally but not pushed."
            exit 1
          fi
      
      - name: Trigger Vercel deployment
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          echo "Cache updated - Vercel will auto-deploy"
      
      - name: Send notification on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const issue = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `CMG Cache Update Failed - ${new Date().toISOString()}`,
              body: `The hourly cache update workflow failed. Please check the logs.`
            };
            // Optionally create an issue
            // github.rest.issues.create(issue);
            console.log('Cache update failed');